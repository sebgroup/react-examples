{"version":3,"sources":["assets/mocks/wizard-page-2-example.ts","components/wizard/sections/WizardSectionB.tsx"],"names":["example","title","key","order","items","label","description","controlType","value","additionalProps","disabled","WizardSectionB","sections","ComponentsHeader","Header","d3","theme","useWizardContext","setSectionB","sectionB","useDynamicForm","renderForm","formState","setFormState","useEffect","Object","keys","length","className","to","WizardSectionBLoading","useState","setSections","setTimeout","h3","toggle"],"mappings":"uKAEaA,EAAgC,CAC3C,CACEC,MAAO,uBACPC,IAAK,YACLC,MAAO,GACPC,MAAO,CACL,CACEF,IAAK,aACLG,MAAO,wGACPC,YAAa,2BACbH,MAAO,EACPI,YAAa,aAEf,CACEL,IAAK,YACLG,MAAO,sBACPF,MAAO,GACPK,OAAO,EACPD,YAAa,YAEf,CACEL,IAAK,YACLG,MAAO,qBACPF,MAAO,GACPI,YAAa,YAEf,CACEL,IAAK,YACLG,MAAO,oBACPF,MAAO,GACPI,YAAa,WACbE,gBAAiB,CACfC,UAAU,O,uCCMdC,EAA+D,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChEC,EAAmB,kBAAM,cAACC,EAAA,EAAD,CAAQC,GAAG,qBAAqBC,MAAM,YADgB,EAEnDC,cAA1BC,EAF6E,EAE7EA,YAAaC,EAFgE,EAEhEA,SAFgE,EAIvCC,yBAAeR,GAJwB,mBAI9ES,EAJ8E,KAIlEC,EAJkE,KAIvDC,EAJuD,KAiBrF,OAXAC,qBAAU,WACRN,EAAY,eAAMI,GAAaA,MAC9B,CAACA,IAEJE,qBAAU,WACgB,kBAAbL,GAAyBM,OAAOC,KAAKP,GAAUQ,QACxDJ,EAAaJ,KAEd,IAID,qCACE,cAACN,EAAD,IAEA,sBAAKe,UAAU,kBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SAA4BP,QAG9B,qBAAKO,UAAU,YAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,cAAC,OAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,OAAD,CAAMA,GAAG,IAAT,gCASCC,UAvEyB,WAAO,IAAD,EACZC,mBAA+B,IADnB,mBACrCnB,EADqC,KAC3BoB,EAD2B,KAS5C,OANAR,qBAAU,WACRS,YAAW,WACTD,EAAYhC,KACX,OACF,IAGD,oCACW,OAARY,QAAQ,IAARA,OAAA,EAAAA,EAAUe,QACT,cAAC,EAAD,CAAgBf,SAAUA,IAE1B,qCACE,cAACE,EAAA,EAAD,CAAQoB,GAAG,qBAAqBnB,GAAG,cAAcC,MAAM,WACvD,qBAAKY,UAAU,kBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAQO,QAAM,MAEhB,qBAAKP,UAAU,cAAf,SACE","file":"static/js/14.163d564d.chunk.js","sourcesContent":["import { DynamicFormSection } from \"@sebgroup/react-components/hooks/useDynamicForm\";\n\nexport const example: DynamicFormSection[] = [\n  {\n    title: \"I was in the backend\",\n    key: \"section-2\",\n    order: 10,\n    items: [\n      {\n        key: \"label-only\",\n        label: \"I'm an example of a label only element, you can put me anywhere you like in the form as general info.\",\n        description: \"And I'm the description.\",\n        order: 0,\n        controlType: \"LabelOnly\"\n      },\n      {\n        key: \"checkbox1\",\n        label: \"Prechecked checkbox\",\n        order: 10,\n        value: true,\n        controlType: \"Checkbox\"\n      },\n      {\n        key: \"checkbox2\",\n        label: \"Unchecked checkbox\",\n        order: 20,\n        controlType: \"Checkbox\"\n      },\n      {\n        key: \"checkbox3\",\n        label: \"Disabled checkbox\",\n        order: 20,\n        controlType: \"Checkbox\",\n        additionalProps: {\n          disabled: true\n        }\n      }\n    ]\n  }\n];\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../../Header\";\nimport { example } from \"../../../assets/mocks/wizard-page-2-example\";\nimport { useDynamicForm, DynamicFormSection } from \"@sebgroup/react-components/hooks/useDynamicForm\";\nimport { useWizardContext } from \"../../../providers/WizardProvider\";\nimport { Link } from \"react-router-dom\";\nimport { Loader } from \"@sebgroup/react-components\";\n\nconst WizardSectionBLoading: React.FC = () => {\n  const [sections, setSections] = useState<DynamicFormSection[]>([]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setSections(example);\n    }, 2000);\n  }, []);\n\n  return (\n    <>\n      {sections?.length ? (\n        <WizardSectionB sections={sections} />\n      ) : (\n        <>\n          <Header h3=\"Wizard | Section B\" d3=\"loading....\" theme=\"danger\" />\n          <div className=\"container-fluid\">\n            <div className=\"card mb-3\">\n              <div className=\"card-body\">\n                <Loader toggle />\n              </div>\n              <div className=\"card-footer\">\n                <p>Please wait ... Mocking fetching the sections from an api :) ....</p>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nconst WizardSectionB: React.FC<{ sections: DynamicFormSection[] }> = ({ sections }) => {\n  const ComponentsHeader = () => <Header d3=\"Wizard | Section B\" theme=\"danger\" />;\n  const { setSectionB, sectionB } = useWizardContext();\n\n  const [renderForm, formState, setFormState] = useDynamicForm(sections);\n\n  useEffect(() => {\n    setSectionB({ ...(formState || formState) });\n  }, [formState]);\n\n  useEffect(() => {\n    if (typeof sectionB === \"object\" && Object.keys(sectionB).length) {\n      setFormState(sectionB as any);\n    }\n  }, []);\n\n  // RENDER =+=+=+=+=+=+=+=+=+=+=+=\n  return (\n    <>\n      <ComponentsHeader />\n\n      <div className=\"container-fluid\">\n        <div className=\"card mb-3\">\n          <div className=\"card-body\">{renderForm()}</div>\n        </div>\n\n        <div className=\"card mb-3\">\n          <div className=\"card-footer\">\n            <div className=\"d-flex justify-content-between my-3 w-100\">\n              <Link to=\"a\">Back</Link>\n              <Link to=\"c\">Next</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default WizardSectionBLoading;\n"],"sourceRoot":""}