{"version":3,"sources":["assets/mocks/wizard-page-1-example.ts","components/wizard/sections/WizardSectionA.tsx"],"names":["example","title","key","order","items","label","multi","value","options","additionalProps","wrapperProps","className","controlType","max","placeholder","rulerKey","condition","WizardSectionA","ComponentsHeader","Header","d3","theme","useWizardContext","setSectionA","sectionA","sections","useDynamicForm","renderForm","formState","setFormState","useEffect","Object","keys","length","to"],"mappings":"uKAEaA,EAAgC,CAC3C,CACEC,MAAO,6BACPC,IAAK,YACLC,MAAO,GACPC,MAAO,CACL,CACEF,IAAK,cACLG,MAAO,yCACPC,OAAO,EACPH,MAAO,GACPI,MAAO,KACPC,QAAS,CACP,CACED,MAAO,MACPF,MAAO,aACPH,IAAK,MACLO,gBAAiB,CACfC,aAAc,CACZC,UAAW,oBAIjB,CACEJ,MAAO,KACPF,MAAO,YACPH,IAAK,KACLO,gBAAiB,CACfC,aAAc,CACZC,UAAW,qBAKnBC,YAAa,SAEf,CACEV,IAAK,cACLG,MAAO,8CACPC,OAAO,EACPO,IAAK,EACLV,MAAO,GACPW,YAAa,sDACbC,SAAU,cACVC,UAAW,MACXJ,YAAa,QAEf,CACEV,IAAK,aACLG,MAAO,yBACPC,OAAO,EACPH,MAAO,GACPW,YAAa,uDACbC,SAAU,cACVC,UAAW,QACXJ,YAAa,W,+BCVNK,UAxCkB,WAC/B,IAAMC,EAAmB,kBAAM,cAACC,EAAA,EAAD,CAAQC,GAAG,qBAAqBC,MAAM,aADhC,EAEHC,cAA1BC,EAF6B,EAE7BA,YAAaC,EAFgB,EAEhBA,SAEfC,EAAiCzB,EAJF,EAMS0B,yBAAeD,GANxB,mBAM9BE,EAN8B,KAMlBC,EANkB,KAMPC,EANO,KAmBrC,OAXAC,qBAAU,WACRP,EAAY,eAAMK,GAAaA,MAC9B,CAACA,IAEJE,qBAAU,WACgB,kBAAbN,GAAyBO,OAAOC,KAAKR,GAAUS,QACxDJ,EAAaL,KAEd,IAID,qCACE,cAACN,EAAD,IAEA,sBAAKP,UAAU,kBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SAA4BgB,QAG9B,qBAAKhB,UAAU,YAAf,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,wCAAf,SACE,cAAC,OAAD,CAAMuB,GAAG,IAAT","file":"static/js/12.b70e1063.chunk.js","sourcesContent":["import { DynamicFormSection } from \"@sebgroup/react-components/hooks/useDynamicForm\";\n\nexport const example: DynamicFormSection[] = [\n  {\n    title: \"Conditional render section\",\n    key: \"section-1\",\n    order: 10,\n    items: [\n      {\n        key: \"show-second\",\n        label: \"Should I display the second form item?\",\n        multi: false,\n        order: 10,\n        value: \"no\",\n        options: [\n          {\n            value: \"yes\",\n            label: \"Yes please\",\n            key: \"yes\",\n            additionalProps: {\n              wrapperProps: {\n                className: \"d-inline-block\"\n              }\n            }\n          },\n          {\n            value: \"no\",\n            label: \"No thanks\",\n            key: \"no\",\n            additionalProps: {\n              wrapperProps: {\n                className: \"d-inline-block\"\n              }\n            }\n          }\n        ],\n        controlType: \"Radio\"\n      },\n      {\n        key: \"second-item\",\n        label: \"Hi I'm the second item! (try to type hello)\",\n        multi: false,\n        max: 5,\n        order: 20,\n        placeholder: \"I should only be displayed if you select Yes above!\",\n        rulerKey: \"show-second\",\n        condition: \"yes\",\n        controlType: \"Text\"\n      },\n      {\n        key: \"third-item\",\n        label: \"Hi I'm the third item!\",\n        multi: false,\n        order: 30,\n        placeholder: \"I should only be displayed if you typed hello above!\",\n        rulerKey: \"second-item\",\n        condition: \"hello\",\n        controlType: \"Text\"\n      }\n    ]\n  }\n];\n","import React, { useEffect } from \"react\";\nimport Header from \"../../Header\";\nimport { example } from \"../../../assets/mocks/wizard-page-1-example\";\nimport { useDynamicForm, DynamicFormSection } from \"@sebgroup/react-components/hooks/useDynamicForm\";\nimport { useWizardContext } from \"../../../providers/WizardProvider\";\nimport { Link } from \"react-router-dom\";\n\nconst WizardSectionA: React.FC = () => {\n  const ComponentsHeader = () => <Header d3=\"Wizard | Section A\" theme=\"warning\" />;\n  const { setSectionA, sectionA } = useWizardContext();\n\n  const sections: DynamicFormSection[] = example;\n\n  const [renderForm, formState, setFormState] = useDynamicForm(sections);\n\n  useEffect(() => {\n    setSectionA({ ...(formState || formState) });\n  }, [formState]);\n\n  useEffect(() => {\n    if (typeof sectionA === \"object\" && Object.keys(sectionA).length) {\n      setFormState(sectionA as any);\n    }\n  }, []);\n\n  // RENDER =+=+=+=+=+=+=+=+=+=+=+=\n  return (\n    <>\n      <ComponentsHeader />\n\n      <div className=\"container-fluid\">\n        <div className=\"card mb-3\">\n          <div className=\"card-body\">{renderForm()}</div>\n        </div>\n\n        <div className=\"card mb-3\">\n          <div className=\"card-footer\">\n            <div className=\"d-flex justify-content-end my-3 w-100\">\n              <Link to=\"b\">Next</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default WizardSectionA;\n"],"sourceRoot":""}